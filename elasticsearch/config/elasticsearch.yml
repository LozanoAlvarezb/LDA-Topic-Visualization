cluster.name: elastic-test
node.name: "estest"

http.host: 0.0.0.0
transport.host: 127.0.0.1
# setting [cluster.initial_master_nodes] is not allowed when [discovery.type] is set to [single-node
# cluster.initial_master_nodes: 127.0.0.1
discovery.type: single-node

bootstrap.memory_lock: true

# index.number_of_shards: 1
# index.number_of_replicas: 0

# path.logs: /var/log/elasticsearch

# Note, that for development on a local machine, with small indices, it usually
# makes sense to "disable" the distributed features:
# Found index level settings on node level configuration.
#   Since elasticsearch 5.x index level settings can NOT be set on the nodes
#   configuration like the elasticsearch.yaml, in system properties or command line
#   arguments.In order to upgrade all indices the settings must be updated via the
#   /${index}/_settings API. Unless all settings are dynamic all indices must be closed
#   in order to apply the upgradeIndices created in the future should use index templates
#   to set default values.
#   Please ensure all required values are updated on all indices by executing:
#     curl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{
#     "index.number_of_replicas" : "0",
#     "index.number_of_shards" : "1"
#     }'
#
# index.number_of_shards: 1
# index.number_of_replicas: 0

# If a plugin listed here is not installed for current node, the node will not start.
#
# plugin.mandatory: mapper-attachments,lang-groovy
## Path to where plugins are installed:
#
# path.plugins: /path/to/plugins
#
# ElasticSearch performs poorly when JVM starts swapping: you should ensure that
# it _never_ swaps.
#
# Set this property to true to lock the memory:

# bootstrap.memory_lock: true
